{
  "name": "spring-jpa-codegen",
  "displayName": "spring jpa codegen",
  "description": "codeg",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "spring-jpa-codegen.generateSpringJpaCode",
        "title": "Generate Java File"
      }
    ],
    "configuration": [
      {
        "title": "Spring Boot Jpa CodeGen",
        "properties": {
          "spring-jpa-codegen.pathToInclude.javaSrc": {
            "type": "array",
            "default": [
              "src/main/java/*"
            ],
            "description": "An array of glob patterns that specify the paths to include for code generation."
          },
          "spring-jpa-codegen.pathToExclude.javaSrc": {
            "type": "array",
            "description": "An array of glob patterns that specify the paths to exclude for code generation."
          },
          "spring-jpa-codegen.pathToInclude.gradleBuildScript": {
            "type": "array",
            "default": [
              "/build.gradle"
            ],
            "description": "An array of glob patterns that specify the paths to include for code generation."
          },
          "spring-jpa-codegen.pathToExclude.gradleBuildScript": {
            "type": "array",
            "default": [
              "/settings.gradle"
            ],
            "description": "An array of glob patterns that specify the paths to include for code generation."
          },
          "spring-jpa-codegen.package.enableSubPackage": {
            "type": "boolean",
            "default": false,
            "description": "A string that specifies how to generate the package name for the generated classes. If it is \"sub\", then the package name will be a subpackage of the original class. If it is \"same\", then the package name will be the same as the original class."
          },
          "spring-jpa-codegen.package.subPackageName": {
            "type": "object",
            "default": {
              "controller": "controller",
              "restController": "controller",
              "dto": "dto",
              "repository": "repository",
              "service": "service",
              "serviceImpl": "service"
            },
            "description": "An object that specifies the name for the package. For example, if the package name of the controller is \"controller\", then the controller class will be generated in the package named ctr."
          },
          "spring-jpa-codegen.annotation.dto": {
            "type": "object",
            "default": {
              "data": true,
              "getter": false,
              "setter": false,
              "builder": false,
              "noArgsConstructor": false,
              "allArgsConstructor": false
            },
            "properties": {
              "data": {
                "type": "boolean"
              },
              "getter": {
                "type": "boolean"
              },
              "setter": {
                "type": "boolean"
              },
              "builder": {
                "type": "boolean"
              },
              "noArgsConstructor": {
                "type": "boolean"
              },
              "allArgsConstructor": {
                "type": "boolean"
              }
            },
            "description": "An object that specify which annotations to use for DTO classes. Each object has a key that is the annotation name and a value that is a boolean indicating whether to enable or disable the annotation. For example, {\"Data\": true} means to use @Data annotation for DTO classes."
          },
          "spring-jpa-codegen.suffix.className": {
            "type": "object",
            "default": {
              "controller": "Controller",
              "restController": "ApiController",
              "dto": "Dto",
              "repository": "Repository",
              "serviceInterface": "Svc",
              "serviceImplementation": "SvcImpl"
            },
            "description": "An object that specifies the suffixes for the various class names. For example, if the controller suffix is \"Controller\", then the controller class for User will be UserController."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3",
    "@vscode/test-electron": "^2.3.2"
  },
  "extensionDependencies": [
    "redhat.java"
  ]
}
